# 6.16 Плохие комментарии

# НЕОЧЕВИДНЫЕ КОММЕНТАРИИ
1.  # Задача 4.9
    # было. 
        def handle(self):
            print("handle activated", self.client_address) # Если клиент(client_address - адрес клиента) подключится к порту
    # стало. Комментарий удален

# БОРМОТАНИЕ
2.  # Задача 26. Саурон и многомерное Кольцо Всевластья
    # было
        def hag(S): # найти и 'обнять' все правильные последовательности
    # стало. Нахождение всех правильных последовательностей и взятие их в ()

# НЕДОСТОВЕРНЫЕ КОММЕНТАРИИ
3.  # Задача 24. Матрица: Вращение
    # было. Недостоверный комментарий Et = Matrix_copy, т.к. переменная Matrix_copy поменяла название
        def rotate(Matrix, i1, i2, j1, j2, Et): # i1, i2, j1, j2 - края 'кольца', Et = Matrix_copy
    # стало. Et - это копия матрицы. 

# ШУМ
4.  # Задача 1. Белочка и изумруды. 
    # было
        def squirrel(N):
            if type(N) is int:  # Проверяем целое ли число N
                assert N >= 0, 'задайте целое число N >= 0'   
                if N == 0:  # Возвращаем 0!=1
                    return 1
    # стало. Все комменткии удалены

5.  # Задача 2. Поездка на мотоцикле
    # было
        def odometer(oksana):
            assert len(oksana) >= 2 # Проверяем, что длина массива >=2
    # стало. Все комменткии удалены

# ПОЗИЦИОННЫЕ МАРКЕРЫ
    # не нашла таких комментариев
# КОММЕНТАРИИ ЗА ЗАКРЫВАЮЩЕЙ ФИГУРНОЙ СКОБКОЙ
    # не нашла таких комментариев
    
# ИЗБЫТОЧНЫЕ КОММЕНТАРИИ
6.  # Задача 4.10. 
    # было.  
        def send_data(self, data, socket_user=None):  # Отправляем данные клиентам (всем, кроме отправителя)
    # стало. Комментарий удален

7.  # Задача 5.5. Очереди
    # было.
    def __init__(self): # инициализация хранилища данных
        self.queue = []
    # стало. Комментарий удален

# СЛИШКОМ МНОГО ИНФОРМАЦИИ
8.  # Задача 4.7. Генераторы
    # было. В комментарии была добавлена переписка 
        while flag:
            flag = False
            for i in ID:
                if ID[i] is None: 
                    ID[i] = next(i)
                    flag = True
                    # break 
                    # ну и в принципе, break тут лучше не делать, 
                    # пускай другие генераторы тоже свои шаги вычисления выполнят. 
                    # Это если потоки, то они сами считают, а генераторы надо вручную "выполнять".
    # стало. Комментарии удалены

# НЕЛОКАЛЬНАЯ ИНФОРМАЦИЯ
    # не нашла таких комментариев

# ОБЯЗАТЕЛЬНЫЕ КОММЕНТАРИИ
9.  # Задача 14. Оптимизация беспилотного трафикв  
    # было
        def Unmanned(L, N, track):  # L - длина дороги
                                    # N - кол-во светофоров
                                    # track - момент вр. от начала дороги, вр. показа красного света и время показа зелёного цвета
    # стало.Комментарии удалены.

# ЗАКОММЕНТИРОВАННЫЙ КОД
10. # Задача 7. Конкурент Google
    # было
        def STROne(S, begin, end): 
        #  много кода
            if S[i] == ' ':
                end = i
                strOne = "".join(S[begin:(end+1)])
                #strOne = S[begin:(end+1)]
    # стало. Старый код удален

11. # Задача 4.8 
    # было
        span_list = soup.find_all('a', {'href': '/players/club-3/14/'})
        # span_list = soup.find_all('td', {'class': 'name'})
    # стало. Старый код удален

# НЕ ИСПОЛЬЗУЙТЕ КОММЕНТАРИИ ТАМ, ГДЕ МОЖНО ИСПОЛЬЗОВАТЬ ФУНКЦИЮ ИЛИ ПЕРЕМЕННУЮ
12. # Задача 10. Экономим тонер
    # было
        def ton(simbol):
            # много кода 
            if simbol in TonerConsumption_ASCII:
                cons = TonerConsumption_ASCII.get(simbol) # расход
    # стало. Комментарий #расход удален. Изменено название ф-ии на toner_consumption, переменная cons удалена
        def toner_consumption(simbol):
            # много коэа
            if simbol in TonerConsumption_ASCII:
                return TonerConsumption_ASCII.get(simbol)

13. # Задача 19. Автоматизация отчётности о продажах
    # было
        def sum(s_new):  # Складывает одинаковые позиции 
    # стало. Комментарий "# Складывает одинаковые позиции" удален. Ф-ия переименована 
        def sum_of_identical_positions(s_new): 

14. # Задача 28. Мастер ключей
    # было
        for i in range(len(tree)):  # Удалить старые ветки
    # стало. Комментарий "# Удалить старые ветки" удален. Для удаления старых веток создана ф-ия delete_old_branches(tree)
        def delete_old_branches(tree):
    
15. # Задача 4.5. Итераторы
    # было
        def iterator_2(N, flag):
            l2 = List2(N, flag)   # объект, True = конечно, False = бесконечно
            il2 = iter(l2) # итератор этого объекта
    # стало. Комментарии удалены. Переменная flag переименована на finity
        def iterator_2(N, finity=True):
            l2 = List2(N, finity)   
            il2 = iter(l2)

16. # Задача 4.6.1. 
    # было
        def big_sum(s:list, n:int):
            begin = 0
            end = 10000
            step = 10000
            sum_list = []  # список сумм кусочков списка
            t = {}  # словарь процессов
    # стало. Комментарии удалены. Переменные sum_list и t переименованы в list_of_sums_of_pieces и dictionary_of_processes
        def big_sum(s:list, n:int):
            begin = 0
            end = 10000
            step = 10000
            list_of_sums_of_pieces = [] 
            dictionary_of_processes = {}
